<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Luma's Shoka</title><link>https://luma0724.github.io/</link><description>Recent content on Luma's Shoka</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 26 Oct 2022 00:00:18 +0800</lastBuildDate><atom:link href="https://luma0724.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>CF279B - Books</title><link>https://luma0724.github.io/posts/cf-279b/</link><pubDate>Fri, 06 Jan 2023 12:37:01 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-279b/</guid><description>CF279B - Books
Use 2-pointers $i, j$ to iterate throught $i=1..n$ to find $j$ such that $\sum_{k=j}^i a[k] &amp;lt;= t$ is maximized in order to find the $\max(i-j+1)$.
#include &amp;lt;bits/stdc++.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://luma0724.github.io/posts/cf-279b/feature.png"/></item><item><title>CF489B - BerSU Ball</title><link>https://luma0724.github.io/posts/cf-489b/</link><pubDate>Thu, 05 Jan 2023 11:24:58 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-489b/</guid><description>CF489B - BerSU Ball
Sort arrays $a, b$. Match $a[i], b[j]$ greedily with two pointers $i, j$. Assume $a[x], b[y]$ the first pair inconsistent with the optimal pair. Note that if $a[i^\prime], b[j^\prime]$ match, $b[j^\prime]$ is always the minimum $b[j]$ upon $a[i]$ not paired in array $b$.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://luma0724.github.io/posts/cf-489b/feature.png"/></item><item><title>CF381A - Sereja and Dima</title><link>https://luma0724.github.io/posts/cf-381a/</link><pubDate>Thu, 05 Jan 2023 10:50:14 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-381a/</guid><description>CF381A - Sereja and Dima
Let $x[n]$ be the cards and $l, r$ the left and right pointers. Sereja and Dima takes $\max(x[l], x[r])$ greedily each round then move the pointers.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://luma0724.github.io/posts/cf-381a/feature.png"/></item><item><title>CF706B - Interesting Drink</title><link>https://luma0724.github.io/posts/cf-706b/</link><pubDate>Wed, 04 Jan 2023 13:45:08 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-706b/</guid><description>CF706B - Interesting Drink
Let $c[max(x)]$ array such that $a[x]$ is the number of $x$. Let $s[max(x)]$ be the prefix sum of $c[max(x)]$ given by
$$s[i] = s[i-1] + c[i]$$ with $s[1] = c[1]$.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://luma0724.github.io/posts/cf-706b/feature.png"/></item><item><title>CF455A - Boredom</title><link>https://luma0724.github.io/posts/cf-455a/</link><pubDate>Wed, 04 Jan 2023 11:39:23 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-455a/</guid><description>CF455A - Boredom
The problem asks to maximize the score. Given an array $a[n]$, the score given by deleting $a[k]$ is $a[k]m[a[k]]$ where $m[a[k]]$ is the number of $a[k]$ in the array.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://luma0724.github.io/posts/cf-455a/feature.png"/></item><item><title>CF189A - Cut Ribbon</title><link>https://luma0724.github.io/posts/cf-189a/</link><pubDate>Wed, 04 Jan 2023 09:25:51 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-189a/</guid><description>Complete Knapsack Problem: Given $a[4]$ weight of items with each value 1 and knapsack capacity $n$, define
$$dp[n^\prime] = \sum_{i=1}^{3} k[i]$$
the maximum value with knapsack with capacity $n^\prime$ such that $k[i] &amp;gt;= 0$ is the number of times $a[i]$ is taken and</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://luma0724.github.io/posts/cf-189a/feature.png"/></item><item><title>CF489C - Given Length and Sum of Digits...</title><link>https://luma0724.github.io/posts/cf-489c/</link><pubDate>Tue, 03 Jan 2023 14:47:41 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-489c/</guid><description>CF489C - Given Length and Sum of Digits&amp;hellip;
Let $x$ and $y$ be the maximum and mininum number with length $m$ and sum of digits $s$. Note that maximum sum of digits of length $m$ is $9m$ and if $s=0$, then there are no solutions with length $m&amp;gt;1$.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://luma0724.github.io/posts/cf-489c/feature.png"/></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C++ on Luma's Shoka</title><link>https://luma0724.github.io/posts/computer_science/c++/</link><description>Recent content in C++ on Luma's Shoka</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 26 Oct 2022 10:00:17 +0800</lastBuildDate><atom:link href="https://luma0724.github.io/posts/computer_science/c++/index.xml" rel="self" type="application/rss+xml"/><item><title>Constants</title><link>https://luma0724.github.io/posts/computer_science/c++/constants/</link><pubDate>Wed, 26 Oct 2022 22:03:59 +0800</pubDate><guid>https://luma0724.github.io/posts/computer_science/c++/constants/</guid><description>Nagiha · Re:prosperitás Constants are promises by the compiler. Constants # C++ has two notions of immutability:
const constexpr const Keyword # The compiler enforces the promise of immutability with the const keyword.</description></item><item><title>Scope and Lifetime of Variables</title><link>https://luma0724.github.io/posts/computer_science/c++/scope_lifetime/</link><pubDate>Wed, 26 Oct 2022 14:52:58 +0800</pubDate><guid>https://luma0724.github.io/posts/computer_science/c++/scope_lifetime/</guid><description>WHITEFISTS · 【G2R2018】VECTOЯ A declaration introduces a name into a scope. Scope # The scope defines where a variable can be accessed.
Local Scope # A name declared in a function or lambda function has a local scope (block scope).</description></item></channel></rss>
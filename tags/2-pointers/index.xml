<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2-pointers on Luma's Shoka</title><link>https://luma0724.github.io/tags/2-pointers/</link><description>Recent content in 2-pointers on Luma's Shoka</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 06 Jan 2023 12:37:01 +0800</lastBuildDate><atom:link href="https://luma0724.github.io/tags/2-pointers/index.xml" rel="self" type="application/rss+xml"/><item><title>CF279B - Books</title><link>https://luma0724.github.io/posts/cf-279b/</link><pubDate>Fri, 06 Jan 2023 12:37:01 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-279b/</guid><description>CF279B - Books
Use 2-pointers $i, j$ to iterate throught $i=1..n$ to find $j$ such that $\sum_{k=j}^i a[k] &amp;lt;= t$ is maximized in order to find the $\max(i-j+1)$.
#include &amp;lt;bits/stdc++.</description></item><item><title>CF489B - BerSU Ball</title><link>https://luma0724.github.io/posts/cf-489b/</link><pubDate>Thu, 05 Jan 2023 11:24:58 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-489b/</guid><description>CF489B - BerSU Ball
Sort arrays $a, b$. Match $a[i], b[j]$ greedily with two pointers $i, j$. Assume $a[x], b[y]$ the first pair inconsistent with the optimal pair. Note that if $a[i^\prime], b[j^\prime]$ match, $b[j^\prime]$ is always the minimum $b[j]$ upon $a[i]$ not paired in array $b$.</description></item><item><title>CF381A - Sereja and Dima</title><link>https://luma0724.github.io/posts/cf-381a/</link><pubDate>Thu, 05 Jan 2023 10:50:14 +0800</pubDate><guid>https://luma0724.github.io/posts/cf-381a/</guid><description>CF381A - Sereja and Dima
Let $x[n]$ be the cards and $l, r$ the left and right pointers. Sereja and Dima takes $\max(x[l], x[r])$ greedily each round then move the pointers.</description></item></channel></rss>